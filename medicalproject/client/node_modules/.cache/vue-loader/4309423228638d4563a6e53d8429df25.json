{"remainingRequest":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/src/components/content/patient_modules/patient_views_modules/ListPatient.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/src/components/content/patient_modules/patient_views_modules/ListPatient.vue","mtime":1569733727000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters} from \"vuex\";\nimport PatientService from '@/services/PatientService'\nimport DrugService from '@/services/DrugService'\n  export default {\n     data(){\n      return{\n        showModal: false,\n        infoModal: {\n            id: 'info-modal',\n            title: '',\n            content: '',\n          },\n          arrayNameDoctor:[],\n          condition:false,\n          filesDisplay: [],\n          filesDisplay2:[]\n      }\n    },\n    computed: {\n        ...mapGetters(\n      [\"patient_records\",\n      \"patient_records_details\",\n      \"fields\",\n      \"pageOptions\",\n      \"nameDoctorWrite_records\",\n      \"isUserLoggedIn\",\n      \"AlternativeRecord\",\n      \"user\",\n      \"patientInfo\"]\n    ),\n    totalRows: {\n           get(){ \n               return this.$store.getters.totalRows\n            },\n           set(payload){  \n               this.$store.dispatch(\"update_inforListPatient\",{\n                    payloadValue: payload,\n                    payloadRouter:'totalRows'\n                })\n           }\n        },\n    patient_filter: {\n           get(){ \n               return this.$store.getters.patient_filter\n            },\n           set(payload){  \n               this.$store.dispatch(\"update_inforListPatient\",{\n                    payloadValue: payload,\n                    payloadRouter:'patient_filter'\n                })\n           }\n        },\n    currentPage: {\n           get(){ \n               return this.$store.getters.currentPage\n            },\n           set(payload){\n               this.$store.dispatch(\"update_inforListPatient\",{\n                    payloadValue: payload,\n                    payloadRouter:'currentPage'\n                })\n           }\n        },\n    perPage: {\n           get(){ \n               return this.$store.getters.perPage\n            },\n           set(payload){\n               this.$store.dispatch(\"update_inforListPatient\",{\n                    payloadValue: payload,\n                    payloadRouter:'perPage'\n                })\n           }\n        }\n    },\n    async mounted() {\n      if(this.user.roles == 1){\n        this.condition = true\n        if(this.patient_records.length){\n          for(let index = 0 ;index<this.patient_records.length;index++){\n          for(let i = 0;i<this.nameDoctorWrite_records.length;i++){\n            if(this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor){   \n              let name = this.nameDoctorWrite_records[i].firstname +' '+this.nameDoctorWrite_records[i].lastname\n                this.arrayNameDoctor[index] = name\n            }\n          }\n        }\n\n        \n          this.totalRows = this.patient_records.length\n\n\n          let lengthOfAlternativeRecord = this.AlternativeRecord.length\n\n          for(let i = 0;i<lengthOfAlternativeRecord;i++ ){\n            for(let index = 0;index <this.AlternativeRecord[i].length;index++ ){\n              if(this.AlternativeRecord[i][index].image ){\n                try{\n                  let base64String = btoa(\n                  new Uint8Array(this.AlternativeRecord[i][index].image.data)\n                      .reduce((data, byte) => data + String.fromCharCode(byte), '')\n                  );\n                    var files_temp = {\n                      url:null,\n                      id_record:null,\n                      isClick:false\n                    };\n                  files_temp.url = new Buffer(base64String, 'base64')\n                  files_temp.id_record = this.AlternativeRecord[i][index].id_record\n                  this.filesDisplay2.push(files_temp)\n                }catch(error){\n                      this.$toasted.show(`${error.response.data.error}`, { \n                        theme: \"toasted-primary\", \n                        position: \"bottom-center\", \n                        duration : 5000\n                    });\n                }\n              }\n            }\n          }\n        }\n\n      }else if(this.user.roles == 3){\n          const id_patient = this.patientInfo.id_account\n          const payload = (await PatientService.show(id_patient)).data\n          const lengthRecord = payload.length\n          if(lengthRecord){\n            const idDoctorWriteRecord = []\n            for(let i = 0 ;i<lengthRecord;i++){\n              idDoctorWriteRecord[i]= payload[i].id_doctor\n            }\n            const ArrayNameDoctor = (await PatientService.get_nameDoctorRecordPatient({id_doctor:idDoctorWriteRecord})).data\n            this.$store.dispatch(\"set_nameDoctorWrite_records\",ArrayNameDoctor)\n            const _DrugRecord = (await DrugService.get_DrugRecordPatient({\n              id_account: 0\n            })).data\n          this.$store.dispatch(\"set_patient_records_details\",_DrugRecord)\n        \n          let lengthOfAlternativeRecord = this.AlternativeRecord.length\n          \n          for(let i = 0;i<lengthOfAlternativeRecord;i++ ){\n            for(let index = 0;index <this.AlternativeRecord[i].length;index++ ){\n              if(this.AlternativeRecord[i][index].image ){\n                try{\n                  let base64String = btoa(\n                  new Uint8Array(this.AlternativeRecord[i][index].image.data)\n                      .reduce((data, byte) => data + String.fromCharCode(byte), '')\n                  );\n                    var files_temp = {\n                      url:null,\n                      id_record:null,\n                      isClick:false\n                    };\n                  files_temp.url = new Buffer(base64String, 'base64')\n                  files_temp.id_record = this.AlternativeRecord[i][index].id_record\n                  this.filesDisplay2.push(files_temp)\n              }catch (error) {\n                    this.$toasted.show(`${error.response.data.error}`, { \n                      theme: \"toasted-primary\", \n                      position: \"bottom-center\", \n                      duration : 5000\n                  });\n                  } \n              }\n            }\n          }\n          }  \n          this.condition = true\n      }\n      \n        if(this.patient_records.length){\n          for(let index = 0 ;index<this.patient_records.length;index++){\n            for(let i = 0;i<this.nameDoctorWrite_records.length;i++){\n              if(this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor){   \n                let name = this.nameDoctorWrite_records[i].firstname +' '+this.nameDoctorWrite_records[i].lastname\n                  this.arrayNameDoctor[index] = name\n              }\n            }\n          }\n        }\n    },\n    methods: {\n      info(item, index, button) {\n        this.infoModal.title = `${this.patient_records[index].patient_title}`\n        let temp2 = this.patient_records_details.filter(f => f.id_record == item.id);\n        this.filesDisplay = this.filesDisplay2.filter(f => f.id_record === item.id);\n        \n        if(temp2.length > 0 || this.filesDisplay.length > 0) {\n          if(temp2.length >0){\n            temp2.forEach(element => {\n              let temp =              \n              `        \n              Tên thuốc: ${element.name }\n              Tổng: ${element.total}\n              Sáng: ${element.morning}\n              Trưa: ${element.midday}\n              Chiều:${element.afternoon}\n              Tối:${element.night}\n              Ghi chú:${element.note}\n              ` \n              this.infoModal.content += temp;\n            });\n          }else{\n            this.infoModal.content = `Không có đơn thuốc nào được tìm thấy`\n          }\n\n\n    if(this.filesDisplay.length >0){\n      this.infoModal.alternativeContent = ''\n    }else{\n        this.infoModal.alternativeContent = `Không có hình ảnh nào được tìm thấy`\n    }\n        \n        }\n        else {\n          this.infoModal.content = `Không có bản ghi nào được tìm thấy`\n          this.infoModal.alternativeContent = `Không có hình ảnh nào được tìm thấy`\n        }\n\n\n        this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n  \n      },\n      resetInfoModal() {\n        this.infoModal.title = ''\n        this.infoModal.content = ''\n      },\n\n\n      onFiltered(filteredItems) {\n        // Trigger pagination to update the number of buttons/pages due to filtering\n        this.totalRows = filteredItems.length\n        this.currentPage = 1\n      }\n    }\n  }\n",{"version":3,"sources":["ListPatient.vue"],"names":[],"mappingsfile":"ListPatient.vue","sourceRoot":"src/components/content/patient_modules/patient_views_modules","sourcesContent":["<template>\n  <b-container fluid v-if=\"patient_records.length && this.isUserLoggedIn && condition \">\n    <!-- User Interface controls -->\n    <div class=\"pt-5 pb-4\">\n      <b-row class=\"my-1 justify-content-between\">\n          <div class=\"pl-4\">\n              Bảng hồ sơ bệnh án\n          </div>\n            <div class=\"subcriber\">\n                <span><input type=\"text\" v-model=\"patient_filter\"  placeholder=\"Chụp X-quang...\"/></span>\n                <span class=\"btn-sub\" :disabled=\"!patient_filter\" @click=\"patient_filter = ''\"><img src=\"@/assets/images/search.svg\" /><span class=\"pl-2 pr-1\" >Xóa Tìm Kiếm</span></span>\n            </div>\n            <div class=\"pr-3 options\">\n                <span>Hiển Thị</span>\n                <b-form-select v-model=\"perPage\" :options=\"pageOptions\"></b-form-select>    \n            </div>\n      </b-row>\n    </div>\n\n    <!-- Main table element -->\n    <b-table\n      bordered\n      show-empty\n      stacked=\"md\"\n      :items=\"patient_records\"\n      :fields=\"fields\"\n      :current-page=\"currentPage\"\n      :per-page=\"perPage\"\n      :filter=\"patient_filter\"\n      @filtered=\"onFiltered\"\n    >\n\n      <template slot=\"patient_records_details\" slot-scope=\"row\" >\n        <b-button size=\"sm\" @click=\"info(row.item, row.index, $event.target)\" class=\"mr-1 details btn-success\">\n          <img src=\"@/assets/images/notepad.svg\" />\n        </b-button>\n      </template>\n\n      <template slot=\"patient_name_doctor\" >\n            <li>{{ this.arrayNameDoctor[0] }}</li>\n      </template> \n\n      <template slot=\"patient_name_doctor\" slot-scope=\"data\" >\n          <ul v-if=\"condition\">\n            {{ arrayNameDoctor[data.index] }}\n          </ul>\n      </template>\n \n\n    </b-table>\n\n    <b-row>\n      <b-col md=\"6\" class=\"my-1\">\n        <b-pagination\n          v-model=\"currentPage\"\n          :total-rows=\"totalRows\"\n          :per-page=\"perPage\"\n          class=\"my-0\"\n        ></b-pagination>\n      </b-col>\n    </b-row>\n\n    <!-- Info modal -->\n    <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\n      <pre>{{ infoModal.content }}</pre>\n      <pre>{{ infoModal.alternativeContent }}</pre>\n      <div class=\"row\">\n        <span v-for=\"(item,index) in filesDisplay\" :key=\"index\" class=\"row pl-5\"> \n          <img :src=\"filesDisplay[index].url\" alt=\"err\" class=\"imageDisplay\" @click.prevent=\"filesDisplay[index].isClick = !filesDisplay[index].isClick\" :class=\"{full : filesDisplay[index].isClick}\" >\n        </span>\n      </div>\n    </b-modal>\n  </b-container>\n</template>\n\n<script>\nimport { mapGetters} from \"vuex\";\nimport PatientService from '@/services/PatientService'\nimport DrugService from '@/services/DrugService'\n  export default {\n     data(){\n      return{\n        showModal: false,\n        infoModal: {\n            id: 'info-modal',\n            title: '',\n            content: '',\n          },\n          arrayNameDoctor:[],\n          condition:false,\n          filesDisplay: [],\n          filesDisplay2:[]\n      }\n    },\n    computed: {\n        ...mapGetters(\n      [\"patient_records\",\n      \"patient_records_details\",\n      \"fields\",\n      \"pageOptions\",\n      \"nameDoctorWrite_records\",\n      \"isUserLoggedIn\",\n      \"AlternativeRecord\",\n      \"user\",\n      \"patientInfo\"]\n    ),\n    totalRows: {\n           get(){ \n               return this.$store.getters.totalRows\n            },\n           set(payload){  \n               this.$store.dispatch(\"update_inforListPatient\",{\n                    payloadValue: payload,\n                    payloadRouter:'totalRows'\n                })\n           }\n        },\n    patient_filter: {\n           get(){ \n               return this.$store.getters.patient_filter\n            },\n           set(payload){  \n               this.$store.dispatch(\"update_inforListPatient\",{\n                    payloadValue: payload,\n                    payloadRouter:'patient_filter'\n                })\n           }\n        },\n    currentPage: {\n           get(){ \n               return this.$store.getters.currentPage\n            },\n           set(payload){\n               this.$store.dispatch(\"update_inforListPatient\",{\n                    payloadValue: payload,\n                    payloadRouter:'currentPage'\n                })\n           }\n        },\n    perPage: {\n           get(){ \n               return this.$store.getters.perPage\n            },\n           set(payload){\n               this.$store.dispatch(\"update_inforListPatient\",{\n                    payloadValue: payload,\n                    payloadRouter:'perPage'\n                })\n           }\n        }\n    },\n    async mounted() {\n      if(this.user.roles == 1){\n        this.condition = true\n        if(this.patient_records.length){\n          for(let index = 0 ;index<this.patient_records.length;index++){\n          for(let i = 0;i<this.nameDoctorWrite_records.length;i++){\n            if(this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor){   \n              let name = this.nameDoctorWrite_records[i].firstname +' '+this.nameDoctorWrite_records[i].lastname\n                this.arrayNameDoctor[index] = name\n            }\n          }\n        }\n\n        \n          this.totalRows = this.patient_records.length\n\n\n          let lengthOfAlternativeRecord = this.AlternativeRecord.length\n\n          for(let i = 0;i<lengthOfAlternativeRecord;i++ ){\n            for(let index = 0;index <this.AlternativeRecord[i].length;index++ ){\n              if(this.AlternativeRecord[i][index].image ){\n                try{\n                  let base64String = btoa(\n                  new Uint8Array(this.AlternativeRecord[i][index].image.data)\n                      .reduce((data, byte) => data + String.fromCharCode(byte), '')\n                  );\n                    var files_temp = {\n                      url:null,\n                      id_record:null,\n                      isClick:false\n                    };\n                  files_temp.url = new Buffer(base64String, 'base64')\n                  files_temp.id_record = this.AlternativeRecord[i][index].id_record\n                  this.filesDisplay2.push(files_temp)\n                }catch(error){\n                      this.$toasted.show(`${error.response.data.error}`, { \n                        theme: \"toasted-primary\", \n                        position: \"bottom-center\", \n                        duration : 5000\n                    });\n                }\n              }\n            }\n          }\n        }\n\n      }else if(this.user.roles == 3){\n          const id_patient = this.patientInfo.id_account\n          const payload = (await PatientService.show(id_patient)).data\n          const lengthRecord = payload.length\n          if(lengthRecord){\n            const idDoctorWriteRecord = []\n            for(let i = 0 ;i<lengthRecord;i++){\n              idDoctorWriteRecord[i]= payload[i].id_doctor\n            }\n            const ArrayNameDoctor = (await PatientService.get_nameDoctorRecordPatient({id_doctor:idDoctorWriteRecord})).data\n            this.$store.dispatch(\"set_nameDoctorWrite_records\",ArrayNameDoctor)\n            const _DrugRecord = (await DrugService.get_DrugRecordPatient({\n              id_account: 0\n            })).data\n          this.$store.dispatch(\"set_patient_records_details\",_DrugRecord)\n        \n          let lengthOfAlternativeRecord = this.AlternativeRecord.length\n          \n          for(let i = 0;i<lengthOfAlternativeRecord;i++ ){\n            for(let index = 0;index <this.AlternativeRecord[i].length;index++ ){\n              if(this.AlternativeRecord[i][index].image ){\n                try{\n                  let base64String = btoa(\n                  new Uint8Array(this.AlternativeRecord[i][index].image.data)\n                      .reduce((data, byte) => data + String.fromCharCode(byte), '')\n                  );\n                    var files_temp = {\n                      url:null,\n                      id_record:null,\n                      isClick:false\n                    };\n                  files_temp.url = new Buffer(base64String, 'base64')\n                  files_temp.id_record = this.AlternativeRecord[i][index].id_record\n                  this.filesDisplay2.push(files_temp)\n              }catch (error) {\n                    this.$toasted.show(`${error.response.data.error}`, { \n                      theme: \"toasted-primary\", \n                      position: \"bottom-center\", \n                      duration : 5000\n                  });\n                  } \n              }\n            }\n          }\n          }  \n          this.condition = true\n      }\n      \n        if(this.patient_records.length){\n          for(let index = 0 ;index<this.patient_records.length;index++){\n            for(let i = 0;i<this.nameDoctorWrite_records.length;i++){\n              if(this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor){   \n                let name = this.nameDoctorWrite_records[i].firstname +' '+this.nameDoctorWrite_records[i].lastname\n                  this.arrayNameDoctor[index] = name\n              }\n            }\n          }\n        }\n    },\n    methods: {\n      info(item, index, button) {\n        this.infoModal.title = `${this.patient_records[index].patient_title}`\n        let temp2 = this.patient_records_details.filter(f => f.id_record == item.id);\n        this.filesDisplay = this.filesDisplay2.filter(f => f.id_record === item.id);\n        \n        if(temp2.length > 0 || this.filesDisplay.length > 0) {\n          if(temp2.length >0){\n            temp2.forEach(element => {\n              let temp =              \n              `        \n              Tên thuốc: ${element.name }\n              Tổng: ${element.total}\n              Sáng: ${element.morning}\n              Trưa: ${element.midday}\n              Chiều:${element.afternoon}\n              Tối:${element.night}\n              Ghi chú:${element.note}\n              ` \n              this.infoModal.content += temp;\n            });\n          }else{\n            this.infoModal.content = `Không có đơn thuốc nào được tìm thấy`\n          }\n\n\n    if(this.filesDisplay.length >0){\n      this.infoModal.alternativeContent = ''\n    }else{\n        this.infoModal.alternativeContent = `Không có hình ảnh nào được tìm thấy`\n    }\n        \n        }\n        else {\n          this.infoModal.content = `Không có bản ghi nào được tìm thấy`\n          this.infoModal.alternativeContent = `Không có hình ảnh nào được tìm thấy`\n        }\n\n\n        this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n  \n      },\n      resetInfoModal() {\n        this.infoModal.title = ''\n        this.infoModal.content = ''\n      },\n\n\n      onFiltered(filteredItems) {\n        // Trigger pagination to update the number of buttons/pages due to filtering\n        this.totalRows = filteredItems.length\n        this.currentPage = 1\n      }\n    }\n  }\n</script>\n\n<style scoped>\n.btn-sub {\n   border: 2px solid rgba(0, 0, 0, 0.5);\n  border-radius: 3px;\n  padding: 6px;\n  font-size: 14px;\n  margin-left: 5px;\n  cursor: pointer;\n    }\n.btn-sub img {\n    height: 1.2em;\n    width: 1.2em;\n}\n.subcriber input {\n  border: 2px solid rgba(0, 0, 0, 0.5);\n  border-radius: 3px;\n  padding: 4px;\n  font-size: 14px;\n  width: 20vw;\n}\n.details{\n    cursor: pointer;\n}\n.details img{\n  height: 1.3rem;\n  width:1.3rem;\n}\nselect{\n    width: 50%;\n}\n.options select{\n    width: 80px;\n    margin-left: 1.5rem;\n}\nli{\n  list-style: none;\n}\n.imageDisplay {\n  height: 5rem;\n  width: 5rem;\n   cursor: pointer;\n}\n\n.imageDisplay img {\n  width: 150px;\n  border-radius: 2px;\n  box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.5);\n}\n.full{\n    position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width:40%;\n  height:auto;\n}\n\n</style>"]}]}
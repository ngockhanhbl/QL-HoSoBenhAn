{"remainingRequest":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/src/components/content/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/src/components/content/Login.vue","mtime":1571409489000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AuthenticationService from '@/services/AuthenticationService';\nimport AccountService from '@/services/AccountService';\nimport { mapGetters} from \"vuex\";\nexport default {\n  data(){\n    return{\n          API_KEYS:null,\n          API_CHECK:null,\n          email:'',\n          password:'',\n          password_again:''\n    }\n  },\n  computed: {\n        ...mapGetters([\"user\"]),\n        login_username: {\n           get(){ \n               return this.$store.getters.login_username\n            },\n           set(payload){  \n               this.$store.dispatch(\"updateUsername\",payload)\n           }\n        },\n        login_password: {\n           get(){ \n               return this.$store.getters.login_password\n            },\n           set(payload){  \n               this.$store.dispatch(\"updatePassword\",payload)\n           }\n        },\n  },\n  mounted() {\n    localStorage.removeItem('vuex');\n  },\n  methods:{\n        async checkAPIKEY(){\n            console.log(this.API_KEYS+' API_KEYS')\n            console.log(this.API_CHECK+ 'API_CHECK')\n            if(this.API_KEYS != this.API_CHECK){\n                this.$toasted.show(`Mã Xác Thực Không Đúng Vui lòng kiểm tra lại !`, { \n                    theme: \"bubble\", \n                    position: \"bottom-right\", \n                    duration : 5000\n                });\n            }else{\n                this.$root.$emit('bv::show::modal', 'modal-4', '#btnShow')\n            }\n        },\n        async changePassword(){\n            try {\n              const response = await AccountService.forgotPassword({\n                  api_key:'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',\n                  email:this.email,\n                  password:this.password\n              })\n              this.$toasted.show(`Đỗi Mật Khẩu Thành công !`, { \n                  theme: \"bubble\", \n                  position: \"bottom-center\", \n                  duration : 5000\n              });\n              this.$root.$emit('bv::hide::modal', 'modal-4', '#btnShow')\n              this.$root.$emit('bv::hide::modal', 'modal-3', '#btnShow')\n              this.$root.$emit('bv::hide::modal', 'modal-2', '#btnShow')\n\n          }catch (error) {\n              this.$toasted.show(`${error.response.data.error}`, { \n                  theme: \"outline\", \n                  position: \"bottom-center\", \n                  duration : 5000\n              });\n          }\n        },\n        checkForm:async function (e) {\n            if(!this.validEmail(this.email)) {\n                    this.$toasted.show(`Vui lòng nhập đúng định dạng email !`, { \n                    theme: \"outline\", \n                    position: \"bottom-center\", \n                    duration : 5000\n                });\n            }\n            else{\n                this.sendAuthentication();\n                this.$root.$emit('bv::show::modal', 'modal-3', '#btnShow')\n            }\n        },\n    validEmail: function (email) {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email)\n    },\n    validPassword: function (email) {\n        var re = /^[a-zA-Z0-9]{8,32}$/;\n        return re.test(email)\n    },\n    resetModal_2(){\n          this.API_KEYS = null,\n          this.API_CHECK = null,\n          this.email= '',\n          this.password='',\n          this.password_again='',\n          this.$root.$emit('bv::hide::modal', 'modal-2', '#btnShow')\n    },\n    resetModal_3(){\n          this.API_KEYS = null,\n          this.API_CHECK = null,\n          this.email= '',\n          this.password= '',\n          this.password_again=''.\n          this.$root.$emit('bv::hide::modal', 'modal-3', '#btnShow')\n    },\n    resetModal_4(){\n          this.API_KEYS = null,\n          this.API_CHECK = null,\n          this.email= '',\n          this.password= '',\n          this.password_again='',\n          this.$root.$emit('bv::hide::modal', 'modal-4', '#btnShow')\n    },\n    IntegerGenerator(){\n        return Math.floor(Math.random() * 10001);\n    },\n    async sendAuthentication(){\n        this.API_KEYS = this.IntegerGenerator();\n        console.log('this.API_KEYS '+this.API_KEYS)\n        try {\n            const response = await AuthenticationService.AuthenticationEmail({\n                API_KEYS:this.API_KEYS,\n                email:this.email\n            })\n        }catch (error) {\n            this.$toasted.show(`${error.response.data.error}`, { \n                theme: \"outline\", \n                position: \"bottom-center\", \n                duration : 5000\n            });\n        }\n    },\n    checkPassword(){\n      if(this.password !== this.password_again){\n          this.$toasted.show(`Password và Password xác nhận không giống nhau, Vui lòng kiểm tra lại !`, { \n              theme: \"outline\", \n              position: \"bottom-center\", \n              duration : 5000\n          });\n          this.password = '';\n          this.password_again = '';\n      }else if(!this.validPassword(this.password)){\n          this.$toasted.show(`Mật khẩu được cung cấp phải khớp với các quy tắc sau:\n              <br>\n              1. Nó phải chứa chỉ các ký tự sau: chữ thường, chữ hoa, chữ số.\n              <br>\n              2. mật khẩu dài ít nhất 8 kí tự và không dài hơn 32 kí tự.\n              `, {\n              theme: \"outline\", \n              position: \"bottom-center\", \n              duration : 5000\n          });\n      }\n      else{\n          this.changePassword();\n      }\n    },\n    async submitLogin(){\n            try {\n                const response = await AuthenticationService.login({\n                  email: this.login_username,\n                  password: this.login_password\n                })\n                  this.$store.dispatch('setToken', response.data.token)\n                  this.$store.dispatch('setUser', response.data.user)\n                  this.$store.dispatch('resetlogin')\n                  window.scrollTo(0,100)   //trick fix slow react\n               if(response.data.user.roles == 1){\n                this.$router.push({\n                  name:'patient',\n                  params: {id:this.user.id}\n                })\n               }\n              if(response.data.user.roles == 2){\n                this.$router.push({\n                  name:'hospital',\n                  params: {id:this.user.id}\n                })\n               }\n              if(response.data.user.roles == 3){\n                this.$router.push({\n                  name:'doctor',\n                  params: {id:this.user.id}\n                })\n               }\n\n              if(response.data.user.roles == 0){\n                this.$router.push({\n                  name:'admin',\n                  params: {id:this.user.id}\n                })\n               }\n\n            }         \n            catch (error) {\n              this.$toasted.show(`${error.response.data.error}`, { \n                theme: \"bubble\", \n                position: \"bottom-right\", \n                duration : 2000\n              });\n              \n              }\n        },\n  },\n};\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Login.vue","sourceRoot":"src/components/content","sourcesContent":["<template>\n<div class=\"bg\">\n<form>\n     <b-row class=\"login shadow p-3 mb-5 bg-white rounded \">\n      <b-col\n        cols=\"12\"\n        class=\"label-login d-flex justify-content-center text-red\"\n      >\n        <h2>Đăng Nhập</h2>\n      </b-col>\n\n      <b-col cols=\"12\">\n        <b-row class=\"lg-control\">\n          <b-col class=\"d-flex inputCus\"\n            ><input type=\"text\" placeholder=\"Nhập Tài Khoản\" v-model=\"login_username\" />\n          </b-col>\n          <span class=\"d-flex align-items-center\"><img src=\"@/assets/images/man-user.svg\" /></span>\n        </b-row>\n      </b-col>\n\n      <div class=\"spacer-5\"></div>\n\n      <b-col cols=\"12\">\n        <b-row class=\"lg-control\">\n          <b-col class=\"d-flex inputCus\"\n            ><input type=\"password\" placeholder=\"Nhập Mật Khẩu\" v-model=\"login_password\"\n          /></b-col>\n           <span class=\"d-flex align-items-center\"><img src=\"@/assets/images/locked.svg\" /></span>\n        </b-row>\n      </b-col>\n      <div class=\"spacer-5\"></div>\n      <b-col cols=\"12\">\n        <b-row class=\"justify-content-around\">\n          <b-button variant=\"outline-primary\" @click=\"submitLogin\">Đăng Nhập</b-button>\n        </b-row>\n      </b-col>\n\n      <b-col cols=\"12\">\n        <div class=\"d-flex\">\n          <b-col class=\"border-top-custom align-self-center\"></b-col>\n          <div class=\"text-center seperate\">Hoặc</div>\n          <b-col class=\"border-top-custom align-self-center\"></b-col>\n        </div>\n      </b-col>\n\n      <b-col cols=\"12\">\n        <b-row class=\"d-flex justify-content-center\">\n        <p class=\"text-request\" v-b-modal.modal-1>\n            Gửi Yêu Cầu Tạo Tài Khoản</p>\n          <b-modal id=\"modal-1\" title=\"ĐĂNG KÍ\" class=\"text-center\"  ok-only>\n              <router-link to=\"/registerpatient\"><p class=\"my-4\">Đăng Kí Dành Cho Bệnh Nhân</p></router-link>\n              <router-link to=\"/registerhospital\"><p class=\"my-4\">Đăng Kí Dành Cho Bệnh Viện</p></router-link>\n          </b-modal>\n        </b-row>\n      </b-col>\n      <b-col cols=\"12\">\n        <b-row class=\"d-flex justify-content-center\">\n        <p class=\"text-request\" v-b-modal.modal-2>\n            Quên Mật Khẩu</p>\n          <b-modal id=\"modal-2\" title=\"Quên mật khẩu\" class=\"d-flex\">\n            <span class=\"title\"> Nhập Email </span>\n            <input  type=\"text\" class=\"w-100 p-1\" v-model=\"email\">\n              <template v-slot:modal-footer>\n                  <div class=\"w-100\">\n                  <b-button\n                      variant=\"secondary\"\n                      size=\"sm\"\n                      class=\"float-right text-white\"\n                      @click=\"resetModal_2\"\n                  >\n                      Đóng\n                  </b-button>\n                  <b-button\n                      @click=\"checkForm\"\n                      variant=\"warning\"\n                      size=\"sm\"\n                      class=\"float-right mr-3 SendReqCreateJob text-white\"\n                  >\n                      Gửi Yêu Cầu Đổi Mật Khẩu\n                  </b-button>\n                  </div>\n              </template>\n          </b-modal>\n          <b-modal id=\"modal-3\" title=\"Xác Thực\" class=\"d-flex\">\n            <span class=\"title\"> Nhập Mã Xác Thực Nhận Được  </span>\n            <input  type=\"text\" class=\"w-100 p-1\" v-model=\"API_CHECK\">\n              <template v-slot:modal-footer>\n                  <div class=\"w-100\">\n                  <b-button\n                      variant=\"secondary\"\n                      size=\"sm\"\n                      class=\"float-right text-white\"\n                      @click=\"resetModal_3\"\n                  >\n                      Đóng\n                  </b-button>\n                  <b-button\n                      @click=\"checkAPIKEY\"\n                      variant=\"warning\"\n                      size=\"sm\"\n                      class=\"float-right mr-3 SendReqCreateJob text-white\"\n                  >\n                      Gửi Xác Thuc\n                  </b-button>\n                  </div>\n              </template>\n          </b-modal>\n          <b-modal id=\"modal-4\" title=\"Đổi Mật Khẩu\" class=\"d-flex\">\n            <div class=\"py-2\">\n              <span class=\"title\"> Nhập Mật khẩu Mới  </span>\n              <input  type=\"password\" class=\"w-100 p-1\" v-model=\"password\">\n            </div>\n            <div class=\"py-2\">\n                <span class=\"title\"> Nhập Lại Mật khẩu Mới  </span>\n                <input type=\"password\" class=\"w-100 p-1\" v-model=\"password_again\">\n            </div>\n              <template v-slot:modal-footer>\n                  <div class=\"w-100\">\n                  <b-button\n                      variant=\"secondary\"\n                      size=\"sm\"\n                      class=\"float-right text-white\"\n                      @click=\"resetModal_4\"\n                  >\n                      Đóng\n                  </b-button>\n                  <b-button\n                      @click=\"checkPassword\"\n                      variant=\"success\"\n                      size=\"sm\"\n                      class=\"float-right mr-3 SendReqCreateJob text-white\"\n                  >\n                      Gửi Xác Thực\n                  </b-button>\n                  </div>\n              </template>\n          </b-modal>\n        </b-row>\n      </b-col>\n    </b-row>\n</form>\n</div>\n</template>\n<script>\nimport AuthenticationService from '@/services/AuthenticationService';\nimport AccountService from '@/services/AccountService';\nimport { mapGetters} from \"vuex\";\nexport default {\n  data(){\n    return{\n          API_KEYS:null,\n          API_CHECK:null,\n          email:'',\n          password:'',\n          password_again:''\n    }\n  },\n  computed: {\n        ...mapGetters([\"user\"]),\n        login_username: {\n           get(){ \n               return this.$store.getters.login_username\n            },\n           set(payload){  \n               this.$store.dispatch(\"updateUsername\",payload)\n           }\n        },\n        login_password: {\n           get(){ \n               return this.$store.getters.login_password\n            },\n           set(payload){  \n               this.$store.dispatch(\"updatePassword\",payload)\n           }\n        },\n  },\n  mounted() {\n    localStorage.removeItem('vuex');\n  },\n  methods:{\n        async checkAPIKEY(){\n            console.log(this.API_KEYS+' API_KEYS')\n            console.log(this.API_CHECK+ 'API_CHECK')\n            if(this.API_KEYS != this.API_CHECK){\n                this.$toasted.show(`Mã Xác Thực Không Đúng Vui lòng kiểm tra lại !`, { \n                    theme: \"bubble\", \n                    position: \"bottom-right\", \n                    duration : 5000\n                });\n            }else{\n                this.$root.$emit('bv::show::modal', 'modal-4', '#btnShow')\n            }\n        },\n        async changePassword(){\n            try {\n              const response = await AccountService.forgotPassword({\n                  api_key:'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',\n                  email:this.email,\n                  password:this.password\n              })\n              this.$toasted.show(`Đỗi Mật Khẩu Thành công !`, { \n                  theme: \"bubble\", \n                  position: \"bottom-center\", \n                  duration : 5000\n              });\n              this.$root.$emit('bv::hide::modal', 'modal-4', '#btnShow')\n              this.$root.$emit('bv::hide::modal', 'modal-3', '#btnShow')\n              this.$root.$emit('bv::hide::modal', 'modal-2', '#btnShow')\n\n          }catch (error) {\n              this.$toasted.show(`${error.response.data.error}`, { \n                  theme: \"outline\", \n                  position: \"bottom-center\", \n                  duration : 5000\n              });\n          }\n        },\n        checkForm:async function (e) {\n            if(!this.validEmail(this.email)) {\n                    this.$toasted.show(`Vui lòng nhập đúng định dạng email !`, { \n                    theme: \"outline\", \n                    position: \"bottom-center\", \n                    duration : 5000\n                });\n            }\n            else{\n                this.sendAuthentication();\n                this.$root.$emit('bv::show::modal', 'modal-3', '#btnShow')\n            }\n        },\n    validEmail: function (email) {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email)\n    },\n    validPassword: function (email) {\n        var re = /^[a-zA-Z0-9]{8,32}$/;\n        return re.test(email)\n    },\n    resetModal_2(){\n          this.API_KEYS = null,\n          this.API_CHECK = null,\n          this.email= '',\n          this.password='',\n          this.password_again='',\n          this.$root.$emit('bv::hide::modal', 'modal-2', '#btnShow')\n    },\n    resetModal_3(){\n          this.API_KEYS = null,\n          this.API_CHECK = null,\n          this.email= '',\n          this.password= '',\n          this.password_again=''.\n          this.$root.$emit('bv::hide::modal', 'modal-3', '#btnShow')\n    },\n    resetModal_4(){\n          this.API_KEYS = null,\n          this.API_CHECK = null,\n          this.email= '',\n          this.password= '',\n          this.password_again='',\n          this.$root.$emit('bv::hide::modal', 'modal-4', '#btnShow')\n    },\n    IntegerGenerator(){\n        return Math.floor(Math.random() * 10001);\n    },\n    async sendAuthentication(){\n        this.API_KEYS = this.IntegerGenerator();\n        console.log('this.API_KEYS '+this.API_KEYS)\n        try {\n            const response = await AuthenticationService.AuthenticationEmail({\n                API_KEYS:this.API_KEYS,\n                email:this.email\n            })\n        }catch (error) {\n            this.$toasted.show(`${error.response.data.error}`, { \n                theme: \"outline\", \n                position: \"bottom-center\", \n                duration : 5000\n            });\n        }\n    },\n    checkPassword(){\n      if(this.password !== this.password_again){\n          this.$toasted.show(`Password và Password xác nhận không giống nhau, Vui lòng kiểm tra lại !`, { \n              theme: \"outline\", \n              position: \"bottom-center\", \n              duration : 5000\n          });\n          this.password = '';\n          this.password_again = '';\n      }else if(!this.validPassword(this.password)){\n          this.$toasted.show(`Mật khẩu được cung cấp phải khớp với các quy tắc sau:\n              <br>\n              1. Nó phải chứa chỉ các ký tự sau: chữ thường, chữ hoa, chữ số.\n              <br>\n              2. mật khẩu dài ít nhất 8 kí tự và không dài hơn 32 kí tự.\n              `, {\n              theme: \"outline\", \n              position: \"bottom-center\", \n              duration : 5000\n          });\n      }\n      else{\n          this.changePassword();\n      }\n    },\n    async submitLogin(){\n            try {\n                const response = await AuthenticationService.login({\n                  email: this.login_username,\n                  password: this.login_password\n                })\n                  this.$store.dispatch('setToken', response.data.token)\n                  this.$store.dispatch('setUser', response.data.user)\n                  this.$store.dispatch('resetlogin')\n                  window.scrollTo(0,100)   //trick fix slow react\n               if(response.data.user.roles == 1){\n                this.$router.push({\n                  name:'patient',\n                  params: {id:this.user.id}\n                })\n               }\n              if(response.data.user.roles == 2){\n                this.$router.push({\n                  name:'hospital',\n                  params: {id:this.user.id}\n                })\n               }\n              if(response.data.user.roles == 3){\n                this.$router.push({\n                  name:'doctor',\n                  params: {id:this.user.id}\n                })\n               }\n\n              if(response.data.user.roles == 0){\n                this.$router.push({\n                  name:'admin',\n                  params: {id:this.user.id}\n                })\n               }\n\n            }         \n            catch (error) {\n              this.$toasted.show(`${error.response.data.error}`, { \n                theme: \"bubble\", \n                position: \"bottom-right\", \n                duration : 2000\n              });\n              \n              }\n        },\n  },\n};\n</script>\n\n<style scoped>\n/* dùng emit gửi cho app.vue để set-backgouround */\n.bg {\n  font-family: Arial, Helvetica, sans-serif;\n  margin-top: 15vh;\n  margin-bottom: 10vh;\n  font-size: 14px;\n\n}\n.login {\n  border: 1px solid #bdc3c7;\n  border-radius: 15px;\n  width: 50vh;\n  height: 75vh;\n  background: #000;\n  margin: auto;\n}\n.label-login {\n  padding: 1rem 0;\n}\n\n.spacer-10 {\n  width: 100%;\n  height: 10px;\n}\n\n.label-login {\n  margin-top: 5vh;\n}\n\n.lg-control input{\n  border: 1px solid #bdc3c7;\n  padding: 1ex;\n  position: relative;\n  padding-left: 30px;\n  border-radius: 5px;\n  width: 80vmin;\n}\n\n.lg-control img {\n  height: 1.2em;\n  width: 1.2em;\n  position: absolute;\n  left: 25px;\n}\n.inputCus {\n  position: relative;\n}\n.border-top-custom {\n  border-top: 1px solid #cdc9c9;\n}\n\n.seperate {\n  padding: 0 15px;\n  color: #cdc9c9;\n}\n.text-request {\n  color: #2c3e50;\n}\n\n.text-red {\n  color: red;\n}\n\n.text-request:hover {\n  text-decoration: underline;\n  cursor: pointer;\n} \n.title{\n  font-size: 1.2rem;\n  color:#2c3e50;\n}\n</style>\n"]}]}
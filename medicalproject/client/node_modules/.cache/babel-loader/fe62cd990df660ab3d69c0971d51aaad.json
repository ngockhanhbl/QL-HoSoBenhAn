{"remainingRequest":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/babel-loader/lib/index.js!/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/eslint-loader/index.js??ref--13-0!/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/src/assets/state/modules/registerpatient.js","dependencies":[{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/src/assets/state/modules/registerpatient.js","mtime":1569663260000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  state: {\n    right: false,\n    //public => false == public(right)\n    valueRight: ''\n  },\n  getters: {\n    right: function right(state) {\n      return state.right;\n    },\n    valueRight: function valueRight(state) {\n      return state.valueRight;\n    }\n  },\n  mutations: {\n    resetRight: function resetRight(state) {\n      state.right = false;\n      state.valueRight = '';\n    },\n    UPDATE_INFORMATION: function UPDATE_INFORMATION(state, payload) {\n      switch (payload.payloadRouter) {\n        case 'right':\n          if (payload.payloadValue == \"public\") {\n            state.valueRight = '';\n            state.right = false;\n          } else {\n            state.right = true;\n          }\n\n          break;\n\n        case 'valueRight':\n          state.valueRight = payload.payloadValue;\n          break;\n\n        default:\n          break;\n      }\n    }\n  },\n  actions: {\n    updateInformation: function updateInformation(context, payload) {\n      context.commit(\"UPDATE_INFORMATION\", payload);\n    },\n    resetRight: function resetRight(context) {\n      context.commit(\"resetRight\");\n    }\n  }\n};",{"version":3,"sources":["/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/src/assets/state/modules/registerpatient.js"],"names":["state","right","valueRight","getters","mutations","resetRight","UPDATE_INFORMATION","payload","payloadRouter","payloadValue","actions","updateInformation","context","commit"],"mappings":"AAAA,eAAe;AACXA,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,KADJ;AACW;AACdC,IAAAA,UAAU,EAAC;AAFR,GADI;AAKXC,EAAAA,OAAO,EAAE;AACLF,IAAAA,KAAK,EAAE,eAAAD,KAAK;AAAA,aAAIA,KAAK,CAACC,KAAV;AAAA,KADP;AAELC,IAAAA,UAAU,EAAC,oBAAAF,KAAK;AAAA,aAAIA,KAAK,CAACE,UAAV;AAAA;AAFX,GALE;AASXE,EAAAA,SAAS,EAAE;AACPC,IAAAA,UADO,sBACIL,KADJ,EACW;AACdA,MAAAA,KAAK,CAACC,KAAN,GAAa,KAAb;AACAD,MAAAA,KAAK,CAACE,UAAN,GAAiB,EAAjB;AACH,KAJM;AAKPI,IAAAA,kBALO,8BAKYN,KALZ,EAKkBO,OALlB,EAK0B;AAC7B,cAAQA,OAAO,CAACC,aAAhB;AACI,aAAK,OAAL;AACI,cAAGD,OAAO,CAACE,YAAR,IAAwB,QAA3B,EAAoC;AAChCT,YAAAA,KAAK,CAACE,UAAN,GAAmB,EAAnB;AACAF,YAAAA,KAAK,CAACC,KAAN,GAAc,KAAd;AACH,WAHD,MAGK;AACDD,YAAAA,KAAK,CAACC,KAAN,GAAc,IAAd;AACH;;AACD;;AACJ,aAAK,YAAL;AACID,UAAAA,KAAK,CAACE,UAAN,GAAmBK,OAAO,CAACE,YAA3B;AACA;;AACJ;AACI;AAbR;AAeH;AArBM,GATA;AAiCXC,EAAAA,OAAO,EAAE;AACHC,IAAAA,iBADG,6BACgBC,OADhB,EACwBL,OADxB,EACiC;AAClCK,MAAAA,OAAO,CAACC,MAAR,CAAe,oBAAf,EAAoCN,OAApC;AACD,KAHE;AAIHF,IAAAA,UAJG,sBAIQO,OAJR,EAIiB;AAClBA,MAAAA,OAAO,CAACC,MAAR,CAAe,YAAf;AACD;AANE;AAjCE,CAAf","sourcesContent":["export default {\n    state: {\n        right: false, //public => false == public(right)\n        valueRight:''\n    },\n    getters: {\n        right: state => state.right,\n        valueRight:state => state.valueRight\n    },\n    mutations: {\n        resetRight(state) {\n            state.right= false\n            state.valueRight=''\n        },\n        UPDATE_INFORMATION(state,payload){\n            switch (payload.payloadRouter) {\n                case 'right':\n                    if(payload.payloadValue == \"public\"){\n                        state.valueRight = ''\n                        state.right = false\n                    }else{                     \n                        state.right = true                                              \n                    }\n                    break;\n                case 'valueRight':\n                    state.valueRight = payload.payloadValue\n                    break;                                  \n                default:\n                    break;\n            }\n        },\n\n    },\n    actions: {\n          updateInformation (context,payload) {\n            context.commit(\"UPDATE_INFORMATION\",payload);\n          },\n          resetRight(context) {\n            context.commit(\"resetRight\");\n          }\n    }\n}\n  "]}]}
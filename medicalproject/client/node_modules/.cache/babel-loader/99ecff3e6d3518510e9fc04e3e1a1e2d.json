{"remainingRequest":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/thread-loader/dist/cjs.js!/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/babel-loader/lib/index.js!/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/src/components/content/patient_modules/patient_views_modules/ListPatient.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/src/components/content/patient_modules/patient_views_modules/ListPatient.vue","mtime":1569659419000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.typed.uint8-array\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport PatientService from '@/services/PatientService';\nimport DrugService from '@/services/DrugService';\nexport default {\n  data: function data() {\n    return {\n      showModal: false,\n      infoModal: {\n        id: 'info-modal',\n        title: '',\n        content: ''\n      },\n      arrayNameDoctor: [],\n      condition: false,\n      filesDisplay: [],\n      filesDisplay2: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters([\"patient_records\", \"patient_records_details\", \"fields\", \"pageOptions\", \"nameDoctorWrite_records\", \"isUserLoggedIn\", \"AlternativeRecord\", \"user\", \"patientInfo\"]), {\n    totalRows: {\n      get: function get() {\n        return this.$store.getters.totalRows;\n      },\n      set: function set(payload) {\n        this.$store.dispatch(\"update_inforListPatient\", {\n          payloadValue: payload,\n          payloadRouter: 'totalRows'\n        });\n      }\n    },\n    patient_filter: {\n      get: function get() {\n        return this.$store.getters.patient_filter;\n      },\n      set: function set(payload) {\n        this.$store.dispatch(\"update_inforListPatient\", {\n          payloadValue: payload,\n          payloadRouter: 'patient_filter'\n        });\n      }\n    },\n    currentPage: {\n      get: function get() {\n        return this.$store.getters.currentPage;\n      },\n      set: function set(payload) {\n        this.$store.dispatch(\"update_inforListPatient\", {\n          payloadValue: payload,\n          payloadRouter: 'currentPage'\n        });\n      }\n    },\n    perPage: {\n      get: function get() {\n        return this.$store.getters.perPage;\n      },\n      set: function set(payload) {\n        this.$store.dispatch(\"update_inforListPatient\", {\n          payloadValue: payload,\n          payloadRouter: 'perPage'\n        });\n      }\n    }\n  }),\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var index, i, name, lengthOfAlternativeRecord, _i, _index, base64String, files_temp, toast, id_patient, payload, lengthRecord, idDoctorWriteRecord, _i2, ArrayNameDoctor, _DrugRecord, _lengthOfAlternativeRecord, _i3, _index2, _base64String, _toast, _index3, _i4, _name;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.user.roles == 1)) {\n                _context.next = 5;\n                break;\n              }\n\n              this.condition = true;\n\n              if (this.patient_records.length) {\n                for (index = 0; index < this.patient_records.length; index++) {\n                  for (i = 0; i < this.nameDoctorWrite_records.length; i++) {\n                    if (this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor) {\n                      name = this.nameDoctorWrite_records[i].firstname + ' ' + this.nameDoctorWrite_records[i].lastname;\n                      this.arrayNameDoctor[index] = name;\n                    }\n                  }\n                }\n\n                this.totalRows = this.patient_records.length;\n                lengthOfAlternativeRecord = this.AlternativeRecord.length;\n\n                for (_i = 0; _i < lengthOfAlternativeRecord; _i++) {\n                  for (_index = 0; _index < this.AlternativeRecord[_i].length; _index++) {\n                    if (this.AlternativeRecord[_i][_index].image) {\n                      try {\n                        base64String = btoa(new Uint8Array(this.AlternativeRecord[_i][_index].image.data).reduce(function (data, byte) {\n                          return data + String.fromCharCode(byte);\n                        }, ''));\n                        files_temp = {\n                          url: null,\n                          id_record: null,\n                          isClick: false\n                        };\n                        files_temp.url = new Buffer(base64String, 'base64');\n                        files_temp.id_record = this.AlternativeRecord[_i][_index].id_record;\n                        this.filesDisplay2.push(files_temp);\n                      } catch (error) {\n                        toast = this.$toasted.show(\"\".concat(error.response.data.error), {\n                          theme: \"toasted-primary\",\n                          position: \"bottom-center\",\n                          duration: 5000\n                        });\n                      }\n                    }\n                  }\n                }\n              }\n\n              _context.next = 25;\n              break;\n\n            case 5:\n              if (!(this.user.roles == 3)) {\n                _context.next = 25;\n                break;\n              }\n\n              id_patient = this.patientInfo.id_account;\n              _context.next = 9;\n              return PatientService.show(id_patient);\n\n            case 9:\n              payload = _context.sent.data;\n              lengthRecord = payload.length;\n\n              if (!lengthRecord) {\n                _context.next = 24;\n                break;\n              }\n\n              idDoctorWriteRecord = [];\n\n              for (_i2 = 0; _i2 < lengthRecord; _i2++) {\n                idDoctorWriteRecord[_i2] = payload[_i2].id_doctor;\n              }\n\n              _context.next = 16;\n              return PatientService.get_nameDoctorRecordPatient({\n                id_doctor: idDoctorWriteRecord\n              });\n\n            case 16:\n              ArrayNameDoctor = _context.sent.data;\n              this.$store.dispatch(\"set_nameDoctorWrite_records\", ArrayNameDoctor);\n              _context.next = 20;\n              return DrugService.get_DrugRecordPatient({\n                id_account: 0\n              });\n\n            case 20:\n              _DrugRecord = _context.sent.data;\n              this.$store.dispatch(\"set_patient_records_details\", _DrugRecord);\n              _lengthOfAlternativeRecord = this.AlternativeRecord.length;\n\n              for (_i3 = 0; _i3 < _lengthOfAlternativeRecord; _i3++) {\n                for (_index2 = 0; _index2 < this.AlternativeRecord[_i3].length; _index2++) {\n                  if (this.AlternativeRecord[_i3][_index2].image) {\n                    try {\n                      _base64String = btoa(new Uint8Array(this.AlternativeRecord[_i3][_index2].image.data).reduce(function (data, byte) {\n                        return data + String.fromCharCode(byte);\n                      }, ''));\n                      files_temp = {\n                        url: null,\n                        id_record: null,\n                        isClick: false\n                      };\n                      files_temp.url = new Buffer(_base64String, 'base64');\n                      files_temp.id_record = this.AlternativeRecord[_i3][_index2].id_record;\n                      this.filesDisplay2.push(files_temp);\n                    } catch (error) {\n                      _toast = this.$toasted.show(\"\".concat(error.response.data.error), {\n                        theme: \"toasted-primary\",\n                        position: \"bottom-center\",\n                        duration: 5000\n                      });\n                    }\n                  }\n                }\n              }\n\n            case 24:\n              this.condition = true;\n\n            case 25:\n              if (this.patient_records.length) {\n                for (_index3 = 0; _index3 < this.patient_records.length; _index3++) {\n                  for (_i4 = 0; _i4 < this.nameDoctorWrite_records.length; _i4++) {\n                    if (this.nameDoctorWrite_records[_i4].id_account == this.patient_records[_index3].id_doctor) {\n                      _name = this.nameDoctorWrite_records[_i4].firstname + ' ' + this.nameDoctorWrite_records[_i4].lastname;\n                      this.arrayNameDoctor[_index3] = _name;\n                    }\n                  }\n                }\n              }\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    info: function info(item, index, button) {\n      var _this = this;\n\n      this.infoModal.title = \"\".concat(this.patient_records[index].patient_title);\n      var temp2 = this.patient_records_details.filter(function (f) {\n        return f.id_record == item.id;\n      });\n      this.filesDisplay = this.filesDisplay2.filter(function (f) {\n        return f.id_record === item.id;\n      });\n\n      if (temp2.length > 0 || this.filesDisplay.length > 0) {\n        if (temp2.length > 0) {\n          temp2.forEach(function (element) {\n            var temp = \"        \\n              T\\xEAn thu\\u1ED1c: \".concat(element.name, \"\\n              T\\u1ED5ng: \").concat(element.total, \"\\n              S\\xE1ng: \").concat(element.morning, \"\\n              Tr\\u01B0a: \").concat(element.midday, \"\\n              Chi\\u1EC1u:\").concat(element.afternoon, \"\\n              T\\u1ED1i:\").concat(element.night, \"\\n              Ghi ch\\xFA:\").concat(element.note, \"\\n              \");\n            _this.infoModal.content += temp;\n          });\n        } else {\n          this.infoModal.content = \"Kh\\xF4ng c\\xF3 \\u0111\\u01A1n thu\\u1ED1c n\\xE0o \\u0111\\u01B0\\u1EE3c t\\xECm th\\u1EA5y\";\n        }\n\n        if (this.filesDisplay.length > 0) {\n          this.infoModal.alternativeContent = '';\n        } else {\n          this.infoModal.alternativeContent = \"Kh\\xF4ng c\\xF3 h\\xECnh \\u1EA3nh n\\xE0o \\u0111\\u01B0\\u1EE3c t\\xECm th\\u1EA5y\";\n        }\n      } else {\n        this.infoModal.content = \"Kh\\xF4ng c\\xF3 b\\u1EA3n ghi n\\xE0o \\u0111\\u01B0\\u1EE3c t\\xECm th\\u1EA5y\";\n        this.infoModal.alternativeContent = \"Kh\\xF4ng c\\xF3 h\\xECnh \\u1EA3nh n\\xE0o \\u0111\\u01B0\\u1EE3c t\\xECm th\\u1EA5y\";\n      }\n\n      this.$root.$emit('bv::show::modal', this.infoModal.id, button);\n    },\n    resetInfoModal: function resetInfoModal() {\n      this.infoModal.title = '';\n      this.infoModal.content = '';\n    },\n    onFiltered: function onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    }\n  }\n};",{"version":3,"sources":["ListPatient.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,cAAA,MAAA,2BAAA;AACA,OAAA,WAAA,MAAA,wBAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA;AACA,QAAA,EAAA,EAAA,YADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA;AAHA,OAFA;AAOA,MAAA,eAAA,EAAA,EAPA;AAQA,MAAA,SAAA,EAAA,KARA;AASA,MAAA,YAAA,EAAA,EATA;AAUA,MAAA,aAAA,EAAA;AAVA,KAAA;AAYA,GAdA;AAeA,EAAA,QAAA,oBACA,UAAA,CACA,CAAA,iBAAA,EACA,yBADA,EAEA,QAFA,EAGA,aAHA,EAIA,yBAJA,EAKA,gBALA,EAMA,mBANA,EAOA,MAPA,EAQA,aARA,CADA,CADA;AAYA,IAAA,SAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,OAAA,CAAA,SAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,OAJA,EAIA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,yBAAA,EAAA;AACA,UAAA,YAAA,EAAA,OADA;AAEA,UAAA,aAAA,EAAA;AAFA,SAAA;AAIA;AATA,KAZA;AAuBA,IAAA,cAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,OAAA,CAAA,cAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,OAJA,EAIA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,yBAAA,EAAA;AACA,UAAA,YAAA,EAAA,OADA;AAEA,UAAA,aAAA,EAAA;AAFA,SAAA;AAIA;AATA,KAvBA;AAkCA,IAAA,WAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,OAAA,CAAA,WAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,OAJA,EAIA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,yBAAA,EAAA;AACA,UAAA,YAAA,EAAA,OADA;AAEA,UAAA,aAAA,EAAA;AAFA,SAAA;AAIA;AATA,KAlCA;AA6CA,IAAA,OAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,OAJA,EAIA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,yBAAA,EAAA;AACA,UAAA,YAAA,EAAA,OADA;AAEA,UAAA,aAAA,EAAA;AAFA,SAAA;AAIA;AATA;AA7CA,IAfA;AAwEA,EAAA,OAxEA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAyEA,KAAA,IAAA,CAAA,KAAA,IAAA,CAzEA;AAAA;AAAA;AAAA;;AA0EA,mBAAA,SAAA,GAAA,IAAA;;AACA,kBAAA,KAAA,eAAA,CAAA,MAAA,EAAA;AACA,qBAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,eAAA,CAAA,MAAA,EAAA,KAAA,EAAA,EAAA;AACA,uBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,wBAAA,KAAA,uBAAA,CAAA,CAAA,EAAA,UAAA,IAAA,KAAA,eAAA,CAAA,KAAA,EAAA,SAAA,EAAA;AACA,sBAAA,IADA,GACA,KAAA,uBAAA,CAAA,CAAA,EAAA,SAAA,GAAA,GAAA,GAAA,KAAA,uBAAA,CAAA,CAAA,EAAA,QADA;AAEA,2BAAA,eAAA,CAAA,KAAA,IAAA,IAAA;AACA;AACA;AACA;;AAGA,qBAAA,SAAA,GAAA,KAAA,eAAA,CAAA,MAAA;AAGA,gBAAA,yBAdA,GAcA,KAAA,iBAAA,CAAA,MAdA;;AAgBA,qBAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,yBAAA,EAAA,EAAA,EAAA,EAAA;AACA,uBAAA,MAAA,GAAA,CAAA,EAAA,MAAA,GAAA,KAAA,iBAAA,CAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA,EAAA;AACA,wBAAA,KAAA,iBAAA,CAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA;AACA,0BAAA;AACA,wBAAA,YADA,GACA,IAAA,CACA,IAAA,UAAA,CAAA,KAAA,iBAAA,CAAA,EAAA,EAAA,MAAA,EAAA,KAAA,CAAA,IAAA,EACA,MADA,CACA,UAAA,IAAA,EAAA,IAAA;AAAA,iCAAA,IAAA,GAAA,MAAA,CAAA,YAAA,CAAA,IAAA,CAAA;AAAA,yBADA,EACA,EADA,CADA,CADA;AAKA,wBAAA,UALA,GAKA;AACA,0BAAA,GAAA,EAAA,IADA;AAEA,0BAAA,SAAA,EAAA,IAFA;AAGA,0BAAA,OAAA,EAAA;AAHA,yBALA;AAUA,wBAAA,UAAA,CAAA,GAAA,GAAA,IAAA,MAAA,CAAA,YAAA,EAAA,QAAA,CAAA;AACA,wBAAA,UAAA,CAAA,SAAA,GAAA,KAAA,iBAAA,CAAA,EAAA,EAAA,MAAA,EAAA,SAAA;AACA,6BAAA,aAAA,CAAA,IAAA,CAAA,UAAA;AACA,uBAbA,CAaA,OAAA,KAAA,EAAA;AACA,wBAAA,KADA,GACA,KAAA,QAAA,CAAA,IAAA,WAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,GAAA;AACA,0BAAA,KAAA,EAAA,iBADA;AAEA,0BAAA,QAAA,EAAA,eAFA;AAGA,0BAAA,QAAA,EAAA;AAHA,yBAAA,CADA;AAMA;AACA;AACA;AACA;AACA;;AArHA;AAAA;;AAAA;AAAA,oBAuHA,KAAA,IAAA,CAAA,KAAA,IAAA,CAvHA;AAAA;AAAA;AAAA;;AAwHA,cAAA,UAxHA,GAwHA,KAAA,WAAA,CAAA,UAxHA;AAAA;AAAA,qBAyHA,cAAA,CAAA,IAAA,CAAA,UAAA,CAzHA;;AAAA;AAyHA,cAAA,OAzHA,iBAyHA,IAzHA;AA0HA,cAAA,YA1HA,GA0HA,OAAA,CAAA,MA1HA;;AAAA,mBA2HA,YA3HA;AAAA;AAAA;AAAA;;AA4HA,cAAA,mBA5HA,GA4HA,EA5HA;;AA6HA,mBAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,YAAA,EAAA,GAAA,EAAA,EAAA;AACA,gBAAA,mBAAA,CAAA,GAAA,CAAA,GAAA,OAAA,CAAA,GAAA,CAAA,CAAA,SAAA;AACA;;AA/HA;AAAA,qBAgIA,cAAA,CAAA,2BAAA,CAAA;AAAA,gBAAA,SAAA,EAAA;AAAA,eAAA,CAhIA;;AAAA;AAgIA,cAAA,eAhIA,iBAgIA,IAhIA;AAiIA,mBAAA,MAAA,CAAA,QAAA,CAAA,6BAAA,EAAA,eAAA;AAjIA;AAAA,qBAkIA,WAAA,CAAA,qBAAA,CAAA;AACA,gBAAA,UAAA,EAAA;AADA,eAAA,CAlIA;;AAAA;AAkIA,cAAA,WAlIA,iBAoIA,IApIA;AAqIA,mBAAA,MAAA,CAAA,QAAA,CAAA,6BAAA,EAAA,WAAA;AAEA,cAAA,0BAvIA,GAuIA,KAAA,iBAAA,CAAA,MAvIA;;AAyIA,mBAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,0BAAA,EAAA,GAAA,EAAA,EAAA;AACA,qBAAA,OAAA,GAAA,CAAA,EAAA,OAAA,GAAA,KAAA,iBAAA,CAAA,GAAA,EAAA,MAAA,EAAA,OAAA,EAAA,EAAA;AACA,sBAAA,KAAA,iBAAA,CAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA;AACA,wBAAA;AACA,sBAAA,aADA,GACA,IAAA,CACA,IAAA,UAAA,CAAA,KAAA,iBAAA,CAAA,GAAA,EAAA,OAAA,EAAA,KAAA,CAAA,IAAA,EACA,MADA,CACA,UAAA,IAAA,EAAA,IAAA;AAAA,+BAAA,IAAA,GAAA,MAAA,CAAA,YAAA,CAAA,IAAA,CAAA;AAAA,uBADA,EACA,EADA,CADA,CADA;AAKA,sBAAA,UALA,GAKA;AACA,wBAAA,GAAA,EAAA,IADA;AAEA,wBAAA,SAAA,EAAA,IAFA;AAGA,wBAAA,OAAA,EAAA;AAHA,uBALA;AAUA,sBAAA,UAAA,CAAA,GAAA,GAAA,IAAA,MAAA,CAAA,aAAA,EAAA,QAAA,CAAA;AACA,sBAAA,UAAA,CAAA,SAAA,GAAA,KAAA,iBAAA,CAAA,GAAA,EAAA,OAAA,EAAA,SAAA;AACA,2BAAA,aAAA,CAAA,IAAA,CAAA,UAAA;AACA,qBAbA,CAaA,OAAA,KAAA,EAAA;AACA,sBAAA,MADA,GACA,KAAA,QAAA,CAAA,IAAA,WAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,GAAA;AACA,wBAAA,KAAA,EAAA,iBADA;AAEA,wBAAA,QAAA,EAAA,eAFA;AAGA,wBAAA,QAAA,EAAA;AAHA,uBAAA,CADA;AAMA;AACA;AACA;AACA;;AAlKA;AAoKA,mBAAA,SAAA,GAAA,IAAA;;AApKA;AAuKA,kBAAA,KAAA,eAAA,CAAA,MAAA,EAAA;AACA,qBAAA,OAAA,GAAA,CAAA,EAAA,OAAA,GAAA,KAAA,eAAA,CAAA,MAAA,EAAA,OAAA,EAAA,EAAA;AACA,uBAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,KAAA,uBAAA,CAAA,MAAA,EAAA,GAAA,EAAA,EAAA;AACA,wBAAA,KAAA,uBAAA,CAAA,GAAA,EAAA,UAAA,IAAA,KAAA,eAAA,CAAA,OAAA,EAAA,SAAA,EAAA;AACA,sBAAA,KADA,GACA,KAAA,uBAAA,CAAA,GAAA,EAAA,SAAA,GAAA,GAAA,GAAA,KAAA,uBAAA,CAAA,GAAA,EAAA,QADA;AAEA,2BAAA,eAAA,CAAA,OAAA,IAAA,KAAA;AACA;AACA;AACA;AACA;;AAhLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkLA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,IADA,EACA,KADA,EACA,MADA,EACA;AAAA;;AACA,WAAA,SAAA,CAAA,KAAA,aAAA,KAAA,eAAA,CAAA,KAAA,EAAA,aAAA;AACA,UAAA,KAAA,GAAA,KAAA,uBAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,SAAA,IAAA,IAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,WAAA,YAAA,GAAA,KAAA,aAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,SAAA,KAAA,IAAA,CAAA,EAAA;AAAA,OAAA,CAAA;;AAEA,UAAA,KAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,YAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,gBAAA,IAAA,wDAEA,OAAA,CAAA,IAFA,wCAGA,OAAA,CAAA,KAHA,sCAIA,OAAA,CAAA,OAJA,wCAKA,OAAA,CAAA,MALA,wCAMA,OAAA,CAAA,SANA,sCAOA,OAAA,CAAA,KAPA,wCAQA,OAAA,CAAA,IARA,qBAAA;AAUA,YAAA,KAAA,CAAA,SAAA,CAAA,OAAA,IAAA,IAAA;AACA,WAZA;AAaA,SAdA,MAcA;AACA,eAAA,SAAA,CAAA,OAAA;AACA;;AAGA,YAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,eAAA,SAAA,CAAA,kBAAA,GAAA,EAAA;AACA,SAFA,MAEA;AACA,eAAA,SAAA,CAAA,kBAAA;AACA;AAEA,OA1BA,MA2BA;AACA,aAAA,SAAA,CAAA,OAAA;AACA,aAAA,SAAA,CAAA,kBAAA;AACA;;AAGA,WAAA,KAAA,CAAA,KAAA,CAAA,iBAAA,EAAA,KAAA,SAAA,CAAA,EAAA,EAAA,MAAA;AAEA,KAzCA;AA0CA,IAAA,cA1CA,4BA0CA;AACA,WAAA,SAAA,CAAA,KAAA,GAAA,EAAA;AACA,WAAA,SAAA,CAAA,OAAA,GAAA,EAAA;AACA,KA7CA;AAgDA,IAAA,UAhDA,sBAgDA,aAhDA,EAgDA;AACA;AACA,WAAA,SAAA,GAAA,aAAA,CAAA,MAAA;AACA,WAAA,WAAA,GAAA,CAAA;AACA;AApDA;AAlLA,CAAA","sourcesContent":["<template>\n  <b-container fluid v-if=\"patient_records.length && this.isUserLoggedIn && condition \">\n    <!-- User Interface controls -->\n    <div class=\"pt-5 pb-4\">\n      <b-row class=\"my-1 justify-content-between\">\n          <div class=\"pl-4\">\n              Bảng hồ sơ bệnh án\n          </div>\n            <div class=\"subcriber\">\n                <span><input type=\"text\" v-model=\"patient_filter\"  placeholder=\"Chụp X-quang...\"/></span>\n                <span class=\"btn-sub\" :disabled=\"!patient_filter\" @click=\"patient_filter = ''\"><img src=\"@/assets/images/search.svg\" /><span class=\"pl-2 pr-1\" >Xóa Tìm Kiếm</span></span>\n            </div>\n            <div class=\"pr-3 options\">\n                <span>Hiển Thị</span>\n                <b-form-select v-model=\"perPage\" :options=\"pageOptions\"></b-form-select>    \n            </div>\n      </b-row>\n    </div>\n\n    <!-- Main table element -->\n    <b-table\n      bordered\n      show-empty\n      stacked=\"md\"\n      :items=\"patient_records\"\n      :fields=\"fields\"\n      :current-page=\"currentPage\"\n      :per-page=\"perPage\"\n      :filter=\"patient_filter\"\n      @filtered=\"onFiltered\"\n    >\n\n      <template slot=\"patient_records_details\" slot-scope=\"row\" >\n        <b-button size=\"sm\" @click=\"info(row.item, row.index, $event.target)\" class=\"mr-1 details btn-success\">\n          <img src=\"@/assets/images/notepad.svg\" />\n        </b-button>\n      </template>\n\n      <template slot=\"patient_name_doctor\" >\n            <li>{{ this.arrayNameDoctor[0] }}</li>\n      </template> \n\n      <template slot=\"patient_name_doctor\" slot-scope=\"data\" >\n          <ul v-if=\"condition\">\n            {{ arrayNameDoctor[data.index] }}\n          </ul>\n      </template>\n \n\n    </b-table>\n\n    <b-row>\n      <b-col md=\"6\" class=\"my-1\">\n        <b-pagination\n          v-model=\"currentPage\"\n          :total-rows=\"totalRows\"\n          :per-page=\"perPage\"\n          class=\"my-0\"\n        ></b-pagination>\n      </b-col>\n    </b-row>\n\n    <!-- Info modal -->\n    <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\n      <pre>{{ infoModal.content }}</pre>\n      <pre>{{ infoModal.alternativeContent }}</pre>\n      <div class=\"row\">\n        <span v-for=\"(item,index) in filesDisplay\" :key=\"index\" class=\"row pl-5\"> \n          <img :src=\"filesDisplay[index].url\" alt=\"err\" class=\"imageDisplay\" @click.prevent=\"filesDisplay[index].isClick = !filesDisplay[index].isClick\" :class=\"{full : filesDisplay[index].isClick}\" >\n        </span>\n      </div>\n    </b-modal>\n  </b-container>\n</template>\n\n<script>\nimport { mapGetters} from \"vuex\";\nimport PatientService from '@/services/PatientService'\nimport DrugService from '@/services/DrugService'\n  export default {\n     data(){\n      return{\n        showModal: false,\n        infoModal: {\n            id: 'info-modal',\n            title: '',\n            content: '',\n          },\n          arrayNameDoctor:[],\n          condition:false,\n          filesDisplay: [],\n          filesDisplay2:[]\n      }\n    },\n    computed: {\n        ...mapGetters(\n      [\"patient_records\",\n      \"patient_records_details\",\n      \"fields\",\n      \"pageOptions\",\n      \"nameDoctorWrite_records\",\n      \"isUserLoggedIn\",\n      \"AlternativeRecord\",\n      \"user\",\n      \"patientInfo\"]\n    ),\n    totalRows: {\n           get(){ \n               return this.$store.getters.totalRows\n            },\n           set(payload){  \n               this.$store.dispatch(\"update_inforListPatient\",{\n                    payloadValue: payload,\n                    payloadRouter:'totalRows'\n                })\n           }\n        },\n    patient_filter: {\n           get(){ \n               return this.$store.getters.patient_filter\n            },\n           set(payload){  \n               this.$store.dispatch(\"update_inforListPatient\",{\n                    payloadValue: payload,\n                    payloadRouter:'patient_filter'\n                })\n           }\n        },\n    currentPage: {\n           get(){ \n               return this.$store.getters.currentPage\n            },\n           set(payload){\n               this.$store.dispatch(\"update_inforListPatient\",{\n                    payloadValue: payload,\n                    payloadRouter:'currentPage'\n                })\n           }\n        },\n    perPage: {\n           get(){ \n               return this.$store.getters.perPage\n            },\n           set(payload){\n               this.$store.dispatch(\"update_inforListPatient\",{\n                    payloadValue: payload,\n                    payloadRouter:'perPage'\n                })\n           }\n        }\n    },\n    async mounted() {\n      if(this.user.roles == 1){\n        this.condition = true\n        if(this.patient_records.length){\n          for(let index = 0 ;index<this.patient_records.length;index++){\n          for(let i = 0;i<this.nameDoctorWrite_records.length;i++){\n            if(this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor){   \n              let name = this.nameDoctorWrite_records[i].firstname +' '+this.nameDoctorWrite_records[i].lastname\n                this.arrayNameDoctor[index] = name\n            }\n          }\n        }\n\n        \n          this.totalRows = this.patient_records.length\n\n\n          let lengthOfAlternativeRecord = this.AlternativeRecord.length\n\n          for(let i = 0;i<lengthOfAlternativeRecord;i++ ){\n            for(let index = 0;index <this.AlternativeRecord[i].length;index++ ){\n              if(this.AlternativeRecord[i][index].image ){\n                try{\n                  let base64String = btoa(\n                  new Uint8Array(this.AlternativeRecord[i][index].image.data)\n                      .reduce((data, byte) => data + String.fromCharCode(byte), '')\n                  );\n                    var files_temp = {\n                      url:null,\n                      id_record:null,\n                      isClick:false\n                    };\n                  files_temp.url = new Buffer(base64String, 'base64')\n                  files_temp.id_record = this.AlternativeRecord[i][index].id_record\n                  this.filesDisplay2.push(files_temp)\n                }catch(error){\n                    let toast = this.$toasted.show(`${error.response.data.error}`, { \n                        theme: \"toasted-primary\", \n                        position: \"bottom-center\", \n                        duration : 5000\n                    });\n                }\n              }\n            }\n          }\n        }\n\n      }else if(this.user.roles == 3){\n          const id_patient = this.patientInfo.id_account\n          const payload = (await PatientService.show(id_patient)).data\n          const lengthRecord = payload.length\n          if(lengthRecord){\n            const idDoctorWriteRecord = []\n            for(let i = 0 ;i<lengthRecord;i++){\n              idDoctorWriteRecord[i]= payload[i].id_doctor\n            }\n            const ArrayNameDoctor = (await PatientService.get_nameDoctorRecordPatient({id_doctor:idDoctorWriteRecord})).data\n            this.$store.dispatch(\"set_nameDoctorWrite_records\",ArrayNameDoctor)\n            const _DrugRecord = (await DrugService.get_DrugRecordPatient({\n              id_account: 0\n            })).data\n          this.$store.dispatch(\"set_patient_records_details\",_DrugRecord)\n        \n          let lengthOfAlternativeRecord = this.AlternativeRecord.length\n          \n          for(let i = 0;i<lengthOfAlternativeRecord;i++ ){\n            for(let index = 0;index <this.AlternativeRecord[i].length;index++ ){\n              if(this.AlternativeRecord[i][index].image ){\n                try{\n                  let base64String = btoa(\n                  new Uint8Array(this.AlternativeRecord[i][index].image.data)\n                      .reduce((data, byte) => data + String.fromCharCode(byte), '')\n                  );\n                    var files_temp = {\n                      url:null,\n                      id_record:null,\n                      isClick:false\n                    };\n                  files_temp.url = new Buffer(base64String, 'base64')\n                  files_temp.id_record = this.AlternativeRecord[i][index].id_record\n                  this.filesDisplay2.push(files_temp)\n              }catch (error) {\n                  let toast = this.$toasted.show(`${error.response.data.error}`, { \n                      theme: \"toasted-primary\", \n                      position: \"bottom-center\", \n                      duration : 5000\n                  });\n                  } \n              }\n            }\n          }\n          }  \n          this.condition = true\n      }\n      \n        if(this.patient_records.length){\n          for(let index = 0 ;index<this.patient_records.length;index++){\n            for(let i = 0;i<this.nameDoctorWrite_records.length;i++){\n              if(this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor){   \n                let name = this.nameDoctorWrite_records[i].firstname +' '+this.nameDoctorWrite_records[i].lastname\n                  this.arrayNameDoctor[index] = name\n              }\n            }\n          }\n        }\n    },\n    methods: {\n      info(item, index, button) {\n        this.infoModal.title = `${this.patient_records[index].patient_title}`\n        let temp2 = this.patient_records_details.filter(f => f.id_record == item.id);\n        this.filesDisplay = this.filesDisplay2.filter(f => f.id_record === item.id);\n        \n        if(temp2.length > 0 || this.filesDisplay.length > 0) {\n          if(temp2.length >0){\n            temp2.forEach(element => {\n              let temp =              \n              `        \n              Tên thuốc: ${element.name }\n              Tổng: ${element.total}\n              Sáng: ${element.morning}\n              Trưa: ${element.midday}\n              Chiều:${element.afternoon}\n              Tối:${element.night}\n              Ghi chú:${element.note}\n              ` \n              this.infoModal.content += temp;\n            });\n          }else{\n            this.infoModal.content = `Không có đơn thuốc nào được tìm thấy`\n          }\n\n\n    if(this.filesDisplay.length >0){\n      this.infoModal.alternativeContent = ''\n    }else{\n        this.infoModal.alternativeContent = `Không có hình ảnh nào được tìm thấy`\n    }\n        \n        }\n        else {\n          this.infoModal.content = `Không có bản ghi nào được tìm thấy`\n          this.infoModal.alternativeContent = `Không có hình ảnh nào được tìm thấy`\n        }\n\n\n        this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n  \n      },\n      resetInfoModal() {\n        this.infoModal.title = ''\n        this.infoModal.content = ''\n      },\n\n\n      onFiltered(filteredItems) {\n        // Trigger pagination to update the number of buttons/pages due to filtering\n        this.totalRows = filteredItems.length\n        this.currentPage = 1\n      }\n    }\n  }\n</script>\n\n<style scoped>\n.btn-sub {\n   border: 2px solid rgba(0, 0, 0, 0.5);\n  border-radius: 3px;\n  padding: 6px;\n  font-size: 14px;\n  margin-left: 5px;\n  cursor: pointer;\n    }\n.btn-sub img {\n    height: 1.2em;\n    width: 1.2em;\n}\n.subcriber input {\n  border: 2px solid rgba(0, 0, 0, 0.5);\n  border-radius: 3px;\n  padding: 4px;\n  font-size: 14px;\n  width: 20vw;\n}\n.details{\n    cursor: pointer;\n}\n.details img{\n  height: 1.3rem;\n  width:1.3rem;\n}\nselect{\n    width: 50%;\n}\n.options select{\n    width: 80px;\n    margin-left: 1.5rem;\n}\nli{\n  list-style: none;\n}\n.imageDisplay {\n  height: 5rem;\n  width: 5rem;\n   cursor: pointer;\n}\n\n.imageDisplay img {\n  width: 150px;\n  border-radius: 2px;\n  box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.5);\n}\n.full{\n    position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width:40%;\n  height:auto;\n}\n\n</style>"],"sourceRoot":"src/components/content/patient_modules/patient_views_modules"}]}
{"remainingRequest":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/babel-loader/lib/index.js!/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/eslint-loader/index.js??ref--13-0!/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/src/assets/state/modules/registerpatient.js","dependencies":[{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/src/assets/state/modules/registerpatient.js","mtime":1569330022000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  state: {\n    checked: false,\n    right: false,\n    //public => false == public(right)\n    url: null,\n    error: '',\n    firstname: '',\n    lastname: '',\n    day: '',\n    month: '',\n    year: '',\n    phone: '',\n    sex: '',\n    address: '',\n    cmnd: '',\n    email: '',\n    password: '',\n    valueRight: ''\n  },\n  getters: {\n    checked: function checked(state) {\n      return state.checked;\n    },\n    right: function right(state) {\n      return state.right;\n    },\n    url: function url(state) {\n      return state.url;\n    },\n    error: function error(state) {\n      return state.error;\n    },\n    firstname: function firstname(state) {\n      return state.firstname;\n    },\n    lastname: function lastname(state) {\n      return state.lastname;\n    },\n    day: function day(state) {\n      return state.day;\n    },\n    month: function month(state) {\n      return state.month;\n    },\n    year: function year(state) {\n      return state.year;\n    },\n    phone: function phone(state) {\n      return state.phone;\n    },\n    sex: function sex(state) {\n      return state.sex;\n    },\n    address: function address(state) {\n      return state.address;\n    },\n    cmnd: function cmnd(state) {\n      return state.cmnd;\n    },\n    email: function email(state) {\n      return state.email;\n    },\n    password: function password(state) {\n      return state.password;\n    },\n    valueRight: function valueRight(state) {\n      return state.valueRight;\n    }\n  },\n  mutations: {\n    checked: function checked(state, payload) {\n      state.checked = payload;\n\n      if (payload == true) {\n        state.cmnd = '';\n      }\n    },\n    ERROR: function ERROR(state, payload) {\n      state.error = payload;\n    },\n    RESET_FORM_REGISTER_PATIENT: function RESET_FORM_REGISTER_PATIENT(state) {\n      state.checked = false, state.right = false, state.url = null, state.error = '', state.firstname = '', state.lastname = '', state.day = '', state.month = '', state.year = '', state.phone = '', state.sex = '', state.address = '', state.cmnd = '', state.email = '', state.password = '', state.valueRight = '';\n    },\n    UPDATE_INFORMATION: function UPDATE_INFORMATION(state, payload) {\n      switch (payload.payloadRouter) {\n        case 'right':\n          if (payload.payloadValue == \"public\") {\n            state.valueRight = '';\n            state.right = false;\n          } else {\n            state.right = true;\n          }\n\n          break;\n\n        case 'cmnd':\n          if (state.checked == true) {\n            state.cmnd = '';\n          } else {\n            state.cmnd = payload.payloadValue;\n          }\n\n          break;\n\n        case 'firstname':\n          state.firstname = payload.payloadValue;\n          break;\n\n        case 'lastname':\n          state.lastname = payload.payloadValue;\n          break;\n\n        case 'day':\n          state.day = payload.payloadValue;\n          break;\n\n        case 'month':\n          state.month = payload.payloadValue;\n          break;\n\n        case 'year':\n          state.year = payload.payloadValue;\n          break;\n\n        case 'phone':\n          state.phone = payload.payloadValue;\n          break;\n\n        case 'address':\n          state.address = payload.payloadValue;\n          break;\n\n        case 'email':\n          state.email = payload.payloadValue;\n          break;\n\n        case 'password':\n          state.password = payload.payloadValue;\n          break;\n\n        case 'sex':\n          state.sex = payload.payloadValue;\n          break;\n\n        case 'valueRight':\n          state.valueRight = payload.payloadValue;\n          break;\n\n        default:\n          break;\n      }\n    },\n    ON_FILE_CHANGE: function ON_FILE_CHANGE(state, e) {\n      var file = e.target.files[0];\n      state.url = URL.createObjectURL(file);\n    }\n  },\n  actions: {\n    checked: function checked(context, payload) {\n      context.commit(\"checked\", payload);\n    },\n    error: function error(context, payload) {\n      context.commit(\"ERROR\", payload);\n    },\n    updateInformation: function updateInformation(context, payload) {\n      context.commit(\"UPDATE_INFORMATION\", payload);\n    },\n    onFileChange: function onFileChange(context, e) {\n      context.commit(\"ON_FILE_CHANGE\", e);\n    },\n    resetRegiserPatient: function resetRegiserPatient(context) {\n      context.commit(\"RESET_FORM_REGISTER_PATIENT\");\n    }\n  }\n};",{"version":3,"sources":["/Users/mac/Documents/QL-HoSoBenhAn/medicalproject/client/src/assets/state/modules/registerpatient.js"],"names":["state","checked","right","url","error","firstname","lastname","day","month","year","phone","sex","address","cmnd","email","password","valueRight","getters","mutations","payload","ERROR","RESET_FORM_REGISTER_PATIENT","UPDATE_INFORMATION","payloadRouter","payloadValue","ON_FILE_CHANGE","e","file","target","files","URL","createObjectURL","actions","context","commit","updateInformation","onFileChange","resetRegiserPatient"],"mappings":"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","sourcesContent":["export default {\n    state: {\n        checked : false,\n        right: false, //public => false == public(right)\n        url: null,\n        error:'',\n        firstname:'',\n        lastname:'',\n        day:'',\n        month:'',\n        year:'',\n        phone:'',\n        sex:'',\n        address:'',\n        cmnd:'',\n        email:'',\n        password:'',\n        valueRight:''\n    },\n    getters: {\n        checked: state => state.checked,\n        right: state => state.right,\n        url: state => state.url,\n        error: state => state.error,\n        firstname:state => state.firstname,\n        lastname:state => state.lastname,\n        day:state => state.day,\n        month:state => state.month,\n        year:state => state.year,\n        phone:state => state.phone,\n        sex:state => state.sex,\n        address:state => state.address,\n        cmnd:state => state.cmnd,\n        email:state => state.email,\n        password:state => state.password,\n        valueRight:state => state.valueRight\n    },\n    mutations: {\n        checked(state, payload){\n            state.checked = payload\n            if(payload == true){\n                state.cmnd = ''\n            }                 \n        },\n        ERROR(state, payload){\n            state.error = payload\n        },\n        RESET_FORM_REGISTER_PATIENT(state) {\n            state.checked = false,\n            state.right= false, \n            state.url= null,\n            state.error='',\n            state.firstname='',\n            state.lastname='',\n            state.day='',\n            state.month='',\n            state.year='',\n            state.phone='',\n            state.sex='',\n            state.address='',\n            state.cmnd='',\n            state.email='',\n            state.password='',\n            state.valueRight=''\n        },\n        UPDATE_INFORMATION(state,payload){\n            switch (payload.payloadRouter) {\n                case 'right':\n                    if(payload.payloadValue == \"public\"){\n                        state.valueRight = ''\n                        state.right = false\n                    }else{                     \n                        state.right = true                                              \n                    }\n                    break;\n                case 'cmnd':\n                    if(state.checked == true){\n                        state.cmnd = ''\n                    }else{\n                        state.cmnd = payload.payloadValue                       \n                    }\n                    break;\n                case 'firstname':\n                    state.firstname = payload.payloadValue\n                    break;\n                case 'lastname':\n                    state.lastname = payload.payloadValue\n                    break;     \n                case 'day':\n                    state.day = payload.payloadValue\n                    break;     \n                case 'month':\n                    state.month = payload.payloadValue\n                    break;     \n                case 'year':\n                    state.year = payload.payloadValue\n                    break;   \n                case 'phone':\n                    state.phone = payload.payloadValue\n                    break;\n                case 'address':\n                    state.address = payload.payloadValue\n                    break;\n                case 'email':\n                    state.email = payload.payloadValue\n                    break;\n                case 'password':\n                    state.password = payload.payloadValue\n                    break;  \n                case 'sex':\n                    state.sex = payload.payloadValue    \n                    break;\n                case 'valueRight':\n                    state.valueRight = payload.payloadValue\n                    break;                                  \n                default:\n                    break;\n            }\n        },\n        ON_FILE_CHANGE(state, e){\n            const file = e.target.files[0];\n            state.url = URL.createObjectURL(file);\n        },\n    },\n    actions: {\n        checked (context,payload) {\n            context.commit(\"checked\",payload);\n          },\n          error (context,payload) {\n            context.commit(\"ERROR\",payload);\n          },\n          updateInformation (context,payload) {\n            context.commit(\"UPDATE_INFORMATION\",payload);\n          },\n          onFileChange (context,e) {\n            context.commit(\"ON_FILE_CHANGE\",e);\n          },\n          resetRegiserPatient(context) {\n            context.commit(\"RESET_FORM_REGISTER_PATIENT\");\n          }\n    }\n}\n  "]}]}